/* CSS specific to the background animation */
.grid-background {
  --noise-svg: url('data:image/svg+xml,<svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><filter id="noiseFilter"><feTurbulence type="fractalNoise" baseFrequency="10.5" numOctaves="3" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23noiseFilter)" opacity="0.1"/></svg>');
  --grid-size: 80px;
  background:
    var(--noise-svg),
    /* Grid lines */
    linear-gradient(rgba(210, 210, 210, 0.9) 1px, transparent 1px),
    linear-gradient(90deg, rgba(210, 210, 210, 0.9) 1px, transparent 1px);
  background-size:
    200px 200px,
    var(--grid-size) var(--grid-size),
    var(--grid-size) var(--grid-size);
  background-repeat: repeat;
  width: 100%;
  height: 100%;
}

.dark .grid-background {
  /* --noise-svg: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="100" height="100"><defs><filter id="noise"><feTurbulence baseFrequency="0.9" numOctaves="1" result="noise"/><feColorMatrix in="noise" type="saturate" values="0"/><feComponentTransfer><feFuncA type="discrete" tableValues="0 0.01 0 0.03 0 0.01 0.02 0 0.01 0"/></feComponentTransfer></filter></defs><rect width="100%" height="100%" filter="url(%23noise)" opacity="0.1"/></svg>'); */
  background:
    var(--noise-svg),
    /* Grid lines */
    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size:
    200px 200px,
    var(--grid-size) var(--grid-size),
    var(--grid-size) var(--grid-size);
}

/* Falling lines container */
.falling-lines-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/* Falling lines animation */
.falling-line {
  will-change: transform;
  width: 1px;
  height: 100px;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(59, 130, 246, 0.8) 50%,
    rgba(59, 130, 246, 1) 100%
  );
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  position: absolute;
  top: -100px;
  filter: drop-shadow(0 0 10px rgba(59, 130, 246, 0.5));
}

/* .dark .falling-line {
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(147, 197, 253, 0.8) 50%,
    rgba(147, 197, 253, 1) 100%
  );
  filter: drop-shadow(0 0 10px rgba(147, 197, 253, 0.5));
} */

@keyframes fall {
  from {
    transform: translateY(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  to {
    transform: translateY(calc(100vh + 100px));
    opacity: 0;
  }
}

/* Spotlight follow effect */
.spotlight-follow {
  background: radial-gradient(
    50vh 
    circle at var(--mouse-x, 0) var(--mouse-y, 0),
      rgba(255, 255, 255, 0) 50%,
      rgba(255, 255, 255, 0.25) 60%,
      rgba(255, 255, 255, 0.5) 70%,
      rgba(255, 255, 255, 0.7) 100%
  );
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.dark .spotlight-follow {
  background: radial-gradient(
    50vh 
    circle at var(--mouse-x, 0) var(--mouse-y, 0),
      rgba(0, 0, 0, 0) 50%,
      rgba(0, 0, 0, 0.25) 60%,
      rgba(0, 0, 0, 0.5) 70%,
      rgba(0, 0, 0, 0.6) 100%
  );
}
